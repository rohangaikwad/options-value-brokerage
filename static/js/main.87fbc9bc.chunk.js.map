{"version":3,"sources":["Contexts/MainContext.js","Components/BrokerageCalculator/MIS.js","Components/BrokerageCalculator/CNC.js","Components/BrokerageCalculator/FO.js","Components/BrokerageCalculator/FinvasiaFO.js","Components/BrokerageCalculator/Calculator.js","App.js","serviceWorker.js","index.js"],"names":["createContext","MIS","props","calculate","turnover","buy","sell","qty","stt","exchange","gst","sebi","stampduty","setState","toFixed","totaltax","state","brokerage","clearing","this","prevProps","React","Component","CNC","FO","breakeven","pl","netpl","className","FinvasiaFO","Calculator","setActiveCalculator","name","active","setBuy","evt","target","value","document","getElementById","setSell","setQty","toggleCharges","body","classList","toggle","onClick","type","step","placeholder","id","onChange","onKeyUp","defaultValue","min","max","App","symbols","symbol","options","MainContext","Provider","setSymbols","data","setSymbol","setOptions","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.87fbc9bc.chunk.js","sourcesContent":["import { createContext } from 'react';\r\n\r\nexport default createContext({\r\n    \r\n});","import React from 'react';\r\n\r\nexport default class MIS extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turnover: 0,\r\n            brokerage: 40,\r\n            stt: 0,\r\n            exchange: 0,\r\n            clearing: 0,\r\n            gst: 0,\r\n            sebi: 0,\r\n            stampduty: 0,\r\n            totaltax: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calculate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { buy, sell, qty } = this.props;\r\n        if (buy !== prevProps.buy || sell !== prevProps.sell || qty !== prevProps.qty) {\r\n            this.calculate();\r\n        }\r\n    }\r\n\r\n    calculate = () => {\r\n        let brokerage = 40;\r\n        let turnover = (this.props.buy + this.props.sell) * this.props.qty;\r\n        let stt = this.props.sell * this.props.qty * 0.0005;\r\n        let exchange = 0.00053 * turnover;\r\n        let clearing = 0;\r\n        let gst = 0.18 * (brokerage + exchange);\r\n        let sebi = turnover * 0.0000005;\r\n        let stampduty = this.props.buy * this.props.qty * 0.00003;\r\n\r\n        this.setState({\r\n            turnover: turnover,\r\n            stt: stt.toFixed(2),\r\n            exchange: exchange,\r\n            gst: gst.toFixed(2),\r\n            sebi: sebi.toFixed(2),\r\n            stampduty: stampduty.toFixed(2),\r\n            totaltax: (brokerage + stt + exchange + clearing + gst + sebi + stampduty).toFixed(2)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Turnover</td>\r\n                        <td>{this.state.turnover}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Brokerage</td>\r\n                        <td>{this.state.brokerage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>STT Total</td>\r\n                        <td>{this.state.stt}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Exchange Txn</td>\r\n                        <td>{this.state.exchange}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Clearing Charge</td>\r\n                        <td>{this.state.clearing}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>GST</td>\r\n                        <td>{this.state.gst}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>SEBI Charges</td>\r\n                        <td>{this.state.sebi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Stamp Duty</td>\r\n                        <td>{this.state.stampduty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Amount Spent</td>\r\n                        <td>{this.props.buy * this.props.qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Profit</td>\r\n                        <td>{(this.props.sell - this.props.buy) * this.props.qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total Tax</td>\r\n                        <td>{this.state.totaltax}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Net P&L</td>\r\n                        <td>{(((this.props.sell - this.props.buy) * this.props.qty) - this.state.totaltax).toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>P&L %</td>\r\n                        <td>{(((((this.props.sell - this.props.buy) * this.props.qty) - this.state.totaltax)/(this.props.buy * this.props.qty)) * 100).toFixed(2)}%</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class CNC extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turnover: 0,\r\n            brokerage: 40,\r\n            stt: 0,\r\n            exchange: 0,\r\n            clearing: 0,\r\n            gst: 0,\r\n            sebi: 0,\r\n            stampduty: 0,\r\n            totaltax: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calculate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { buy, sell, qty } = this.props;\r\n        if (buy !== prevProps.buy || sell !== prevProps.sell || qty !== prevProps.qty) {\r\n            this.calculate();\r\n        }\r\n    }\r\n\r\n    calculate = () => {\r\n        let brokerage = 40;\r\n        let turnover = (this.props.buy + this.props.sell) * this.props.qty;\r\n        let stt = this.props.sell * this.props.qty * 0.0005;\r\n        let exchange = 0.00053 * turnover;\r\n        let clearing = 0;\r\n        let gst = 0.18 * (brokerage + exchange);\r\n        let sebi = turnover * 0.0000005;\r\n        let stampduty = this.props.buy * this.props.qty * 0.00003;\r\n\r\n        this.setState({\r\n            turnover: turnover,\r\n            stt: stt.toFixed(2),\r\n            exchange: exchange,\r\n            gst: gst.toFixed(2),\r\n            sebi: sebi.toFixed(2),\r\n            stampduty: stampduty.toFixed(2),\r\n            totaltax: (brokerage + stt + exchange + clearing + gst + sebi + stampduty).toFixed(2)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>Turnover</td>\r\n                        <td>{this.state.turnover}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Brokerage</td>\r\n                        <td>{this.state.brokerage}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>STT Total</td>\r\n                        <td>{this.state.stt}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Exchange Txn</td>\r\n                        <td>{this.state.exchange}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Clearing Charge</td>\r\n                        <td>{this.state.clearing}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>GST</td>\r\n                        <td>{this.state.gst}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>SEBI Charges</td>\r\n                        <td>{this.state.sebi}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Stamp Duty</td>\r\n                        <td>{this.state.stampduty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Amount Spent</td>\r\n                        <td>{this.props.buy * this.props.qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Profit</td>\r\n                        <td>{(this.props.sell - this.props.buy) * this.props.qty}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Total Tax</td>\r\n                        <td>{this.state.totaltax}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>Net P&L</td>\r\n                        <td>{(((this.props.sell - this.props.buy) * this.props.qty) - this.state.totaltax).toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>P&L %</td>\r\n                        <td>{(((((this.props.sell - this.props.buy) * this.props.qty) - this.state.totaltax)/(this.props.buy * this.props.qty)) * 100).toFixed(2)}%</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FO extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turnover: 0,\r\n            brokerage: 40,\r\n            stt: 0,\r\n            exchange: 0,\r\n            clearing: 0,\r\n            gst: 0,\r\n            sebi: 0,\r\n            stampduty: 0,\r\n            totaltax: 0,\r\n            breakeven: 0,\r\n            pl: 0,\r\n            netpl: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calculate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { buy, sell, qty } = this.props;\r\n        if (buy !== prevProps.buy || sell !== prevProps.sell || qty !== prevProps.qty) {\r\n            this.calculate();\r\n        }\r\n    }\r\n\r\n    calculate = () => {\r\n        let brokerage = 40;\r\n        let turnover = (this.props.buy + this.props.sell) * this.props.qty;\r\n        let stt = this.props.sell * this.props.qty * 0.0005;\r\n        let exchange = 0.00053 * turnover;\r\n        let clearing = 0;\r\n        let gst = 0.18 * (brokerage + exchange);\r\n        let sebi = turnover * 0.0000005;\r\n        let stampduty = this.props.buy * this.props.qty * 0.00003;\r\n        let totaltax = brokerage + stt + exchange + clearing + gst + sebi + stampduty;\r\n        let breakeven = totaltax/this.props.qty;\r\n        let pl = (this.props.sell - this.props.buy) * this.props.qty;\r\n        let netpl = pl-totaltax;\r\n\r\n        this.setState({\r\n            turnover: turnover,\r\n            stt: stt.toFixed(2),\r\n            exchange: exchange.toFixed(2),\r\n            gst: gst.toFixed(2),\r\n            sebi: sebi.toFixed(2),\r\n            stampduty: stampduty.toFixed(2),\r\n            totaltax: totaltax.toFixed(2),\r\n            breakeven: breakeven,\r\n            pl: pl,\r\n            netpl: netpl\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table table-bordered table-primary table-striped\">\r\n                <tbody>\r\n                    <tr>\r\n                        <th>Breakeven</th>\r\n                        <td>{(this.state.breakeven + this.props.buy).toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>Turnover</th>\r\n                        <td>{this.state.turnover.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>Brokerage</th>\r\n                        <td>{this.state.brokerage.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>STT Total</th>\r\n                        <td>{this.state.stt}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>Exchange Txn</th>\r\n                        <td>{this.state.exchange}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>Clearing Charge</th>\r\n                        <td>{this.state.clearing.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>GST</th>\r\n                        <td>{this.state.gst}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>SEBI Charges</th>\r\n                        <td>{this.state.sebi}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>Stamp Duty</th>\r\n                        <td>{this.state.stampduty}</td>\r\n                    </tr>\r\n                    <tr className=\"hide\">\r\n                        <th>Profit</th>\r\n                        <td>{this.state.pl.toFixed(2)}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Charges</th>\r\n                        <td>{this.state.totaltax}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th>Net P&L</th>\r\n                        <td className={this.state.netpl >= 0 ? 'profit' : 'loss'}><strong>{(((this.props.sell - this.props.buy) * this.props.qty) - this.state.totaltax).toFixed(2)}</strong></td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport default class FinvasiaFO extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            turnover: 0,\r\n            brokerage: 0,\r\n            stt: 0,\r\n            exchange: 0,\r\n            clearing: 0,\r\n            gst: 0,\r\n            sebi: 0,\r\n            stampduty: 0,\r\n            totaltax: 0,\r\n            breakeven: 0,\r\n            pl: 0,\r\n            netpl: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.calculate();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        let { buy, sell, qty } = this.props;\r\n        if (buy !== prevProps.buy || sell !== prevProps.sell || qty !== prevProps.qty) {\r\n            this.calculate();\r\n        }\r\n    }\r\n\r\n    calculate = () => {\r\n        let brokerage = 0;\r\n        let turnover = (this.props.buy + this.props.sell) * this.props.qty;\r\n        let stt = this.props.sell * this.props.qty * 0.0005;\r\n        let exchange = 0.00053 * turnover;\r\n        let clearing = 0;\r\n        let gst = 0.18 * (brokerage + exchange);\r\n        let sebi = turnover * 0.0000005;\r\n        let stampduty = this.props.buy * this.props.qty * 0.00003;\r\n        let totaltax = brokerage + stt + exchange + clearing + gst + sebi + stampduty;\r\n        let breakeven = totaltax/this.props.qty;\r\n        let pl = (this.props.sell - this.props.buy) * this.props.qty;\r\n        let netpl = pl-totaltax;\r\n\r\n        this.setState({\r\n            turnover: turnover,\r\n            stt: stt.toFixed(2),\r\n            exchange: exchange.toFixed(2),\r\n            gst: gst.toFixed(2),\r\n            sebi: sebi.toFixed(2),\r\n            stampduty: stampduty.toFixed(2),\r\n            totaltax: totaltax.toFixed(2),\r\n            breakeven: breakeven,\r\n            pl: pl,\r\n            netpl: netpl\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <table className=\"table table-bordered table-success table-striped\">\r\n                    <tbody>\r\n                        <tr>\r\n                            <th>Breakeven</th>\r\n                            <td>{(this.state.breakeven + this.props.buy).toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>Turnover</th>\r\n                            <td>{this.state.turnover.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>Brokerage</th>\r\n                            <td>{this.state.brokerage.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>STT Total</th>\r\n                            <td>{this.state.stt}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>Exchange Txn</th>\r\n                            <td>{this.state.exchange}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>Clearing Charge</th>\r\n                            <td>{this.state.clearing.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>GST</th>\r\n                            <td>{this.state.gst}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>SEBI Charges</th>\r\n                            <td>{this.state.sebi}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>Stamp Duty</th>\r\n                            <td>{this.state.stampduty}</td>\r\n                        </tr>\r\n                        <tr className=\"hide\">\r\n                            <th>Profit</th>\r\n                            <td>{this.state.pl.toFixed(2)}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Charges</th>\r\n                            <td>{this.state.totaltax}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <th>Net P&L</th>\r\n                            <td className={this.state.netpl >= 0 ? 'profit' : 'loss'}><strong>{this.state.netpl.toFixed(2)}</strong></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport MIS from './MIS';\r\nimport CNC from './CNC';\r\nimport FO from './FO';\r\nimport FinvasiaFO from './FinvasiaFO';\r\n\r\nexport default class Calculator extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            buy: 25, sell: 25.25, qty: 225, active: \"o\"\r\n        }\r\n    }\r\n\r\n    setActiveCalculator = (name) => {\r\n        this.setState({active: name})\r\n    }\r\n\r\n    setBuy = (evt) => {\r\n        let buy = +evt.target.value;\r\n        let sell = buy * 1.01;\r\n        this.setState({ buy: buy, sell: sell});\r\n        document.getElementById('sel').value = sell;\r\n    }\r\n\r\n    setSell = (evt) => {\r\n        this.setState({ sell: +evt.target.value });\r\n    }\r\n\r\n    setQty = (evt) => {\r\n        this.setState({ qty: +evt.target.value });\r\n    }\r\n\r\n    toggleCharges = () => {\r\n        document.body.classList.toggle('show-charges');\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"container\">\r\n\r\n                <div className=\"charges-toggle\">\r\n                    <div className=\"btn-charges\" onClick={() => this.toggleCharges()}>Charges</div>\r\n                </div>\r\n\r\n                <ul className=\"nav nav-tabs mt-4\">\r\n                    <li className=\"nav-item\" onClick={() => this.setActiveCalculator('mis')}>\r\n                        <div className={`nav-link ${this.state.active === \"mis\" ? 'active':''}`}>MIS</div>\r\n                    </li>\r\n                    <li className=\"nav-item\" onClick={() => this.setActiveCalculator('cnc')}>\r\n                        <div className={`nav-link ${this.state.active === \"cnc\" ? 'active':''}`}>CNC</div>\r\n                    </li>\r\n                    <li className=\"nav-item\" onClick={() => this.setActiveCalculator('f')}>\r\n                        <div className={`nav-link ${this.state.active === \"f\" ? 'active':''}`}>F</div>\r\n                    </li>\r\n                    <li className=\"nav-item\" onClick={() => this.setActiveCalculator('o')}>\r\n                        <div className={`nav-link ${this.state.active === \"o\" ? 'active':''}`}>O</div>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"tab-panel mt-3\">\r\n                    <div className=\"inputs row\">\r\n\r\n                        <div className=\"col\">\r\n                            <label className=\"form-label\">Buy</label>\r\n                            <input type=\"number\" step=\"0.05\" placeholder=\"buy\" id=\"buy\" onChange={this.setBuy} onKeyUp={this.setBuy} defaultValue={this.state.buy} className=\"form-control\"/>\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <label className=\"form-label\">Sell</label>\r\n                            <input type=\"number\" step=\"0.05\" placeholder=\"sell\" id=\"sel\" onChange={this.setSell} onKeyUp={this.setSell} defaultValue={this.state.sell} className=\"form-control\"/>\r\n                        </div>\r\n\r\n                        <div className=\"col-12 mt-3\">\r\n                            <span className=\"d-flex justify-content-between\">Qty: {this.state.qty} <span>{this.state.buy} * {this.state.qty} = <b>₹{this.state.buy * this.state.qty}</b></span></span>\r\n                            <input type=\"range\" defaultValue={this.state.qty} step=\"25\" min=\"25\" max=\"2500\" placeholder=\"qty\" id=\"qty\" onChange={this.setQty} onKeyUp={this.setQty} className=\"form-range\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"calculations mt-3\">\r\n                        {this.state.active === 'mis' && <MIS buy={this.state.buy} sell={this.state.sell} qty={this.state.qty} />}\r\n                        {this.state.active === 'cnc' && <CNC buy={this.state.buy} sell={this.state.sell} qty={this.state.qty} />}\r\n                        {this.state.active === 'o'  && <FO buy={this.state.buy} sell={this.state.sell} qty={this.state.qty} />}\r\n                        {this.state.active === 'o'  && <FinvasiaFO buy={this.state.buy} sell={this.state.sell} qty={this.state.qty} />}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport MainContext from './Contexts/MainContext';\n\nimport Calculator from './Components/BrokerageCalculator/Calculator';\n//import Symbols from './Components/Symbols/Symbols';\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            symbols: [],\n            symbol: '',\n            options: {}\n        }\n    }\n\n    render() {\n        return (            \n            <MainContext.Provider value={{\n                symbols: this.state.symbols,\n                setSymbols: (data) => this.setState({symbols: data}),\n                symbol: this.state.symbol,\n                setSymbol: (data) => this.setState({symbol: data}),\n                options: this.state.options,\n                setOptions: (data) => this.setState({options: data})\n            }}>\n                <div className=\"main-container\">\n                    {/* <Symbols /> */}\n                    <Calculator />\n                </div>\n            </MainContext.Provider>\n        )\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.1/8 is considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl)\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready.then(registration => {\r\n        registration.unregister();\r\n      });\r\n    }\r\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './common.scss';\n//import * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport * as serviceWorker from './serviceWorker';\n//import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}